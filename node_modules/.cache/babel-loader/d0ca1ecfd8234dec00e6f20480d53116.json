{"ast":null,"code":"var _jsxFileName = \"/Users/alexiabanos/Documents/GitHub/react-developer-portfolio/src/contexts/theme-context.js\";\nimport React, { createContext, useState } from 'react';\nimport { theDarkTheme, theLightTheme } from '../theme/theme';\nexport const ThemeContext = createContext();\nfunction ThemeContextProvider(props) {\n  // eslint-disable-next-line\n  const [theme, setTheme] = useState(theDarkTheme);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [isDark, setDark] = useState(true);\n  const setHandleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n  const changeTheme = () => {\n    if (isDark) {\n      setTheme(theLightTheme);\n      setDark(false);\n    } else {\n      setTheme(theDarkTheme);\n      setDark(true);\n    }\n  };\n  const value = {\n    theme,\n    drawerOpen,\n    setHandleDrawer,\n    changeTheme,\n    isDark\n  };\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.children);\n}\nexport default ThemeContextProvider;","map":{"version":3,"names":["React","createContext","useState","theDarkTheme","theLightTheme","ThemeContext","ThemeContextProvider","props","theme","setTheme","drawerOpen","setDrawerOpen","isDark","setDark","setHandleDrawer","changeTheme","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["/Users/alexiabanos/Documents/GitHub/react-developer-portfolio/src/contexts/theme-context.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nimport { theDarkTheme, theLightTheme } from '../theme/theme';\n\nexport const ThemeContext = createContext()\n\nfunction ThemeContextProvider(props) {\n    // eslint-disable-next-line\n    const [theme, setTheme] = useState(theDarkTheme);\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [isDark, setDark] = useState(true);\n\n    const setHandleDrawer = () => {\n        setDrawerOpen(!drawerOpen)\n    }\n\n    const changeTheme = () => {\n        if (isDark) {\n            setTheme(theLightTheme);\n            setDark(false);\n        } else {\n            setTheme(theDarkTheme);\n            setDark(true);\n        }\n    }\n\n    const value = { theme, drawerOpen, setHandleDrawer, changeTheme, isDark }\n    return (\n        <ThemeContext.Provider value={value}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\n\nexport default ThemeContextProvider"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAEtD,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAE5D,OAAO,MAAMC,YAAY,GAAGJ,aAAa,CAAC,CAAC;AAE3C,SAASK,oBAAoBA,CAACC,KAAK,EAAE;EACjC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,YAAY,CAAC;EAChD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,MAAM,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC1BH,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIH,MAAM,EAAE;MACRH,QAAQ,CAACL,aAAa,CAAC;MACvBS,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM;MACHJ,QAAQ,CAACN,YAAY,CAAC;MACtBU,OAAO,CAAC,IAAI,CAAC;IACjB;EACJ,CAAC;EAED,MAAMG,KAAK,GAAG;IAAER,KAAK;IAAEE,UAAU;IAAEI,eAAe;IAAEC,WAAW;IAAEH;EAAO,CAAC;EACzE,oBACIZ,KAAA,CAAAiB,aAAA,CAACZ,YAAY,CAACa,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/BjB,KAAK,CAACkB,QACY,CAAC;AAEhC;AAGA,eAAenB,oBAAoB"},"metadata":{},"sourceType":"module"}