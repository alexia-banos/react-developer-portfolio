{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lottie-web'), require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'lottie-web', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"lottie-react\"] = {}, global.Lottie, global.React));\n})(this, function (exports, lottie, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var lottie__default = /*#__PURE__*/_interopDefaultLegacy(lottie);\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  function _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n      var _s,\n        _e,\n        _x,\n        _r,\n        _arr = [],\n        _n = !0,\n        _d = !1;\n      try {\n        if (_x = (_i = _i.call(arr)).next, 0 === i) {\n          if (Object(_i) !== _i) return;\n          _n = !1;\n        } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n      } catch (err) {\n        _d = !0, _e = err;\n      } finally {\n        try {\n          if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  var _excluded$1 = [\"animationData\", \"loop\", \"autoplay\", \"initialSegment\", \"onComplete\", \"onLoopComplete\", \"onEnterFrame\", \"onSegmentStart\", \"onConfigReady\", \"onDataReady\", \"onDataFailed\", \"onLoadedImages\", \"onDOMLoaded\", \"onDestroy\", \"lottieRef\", \"renderer\", \"name\", \"assetsPath\", \"rendererSettings\"];\n  var useLottie = function useLottie(props, style) {\n    var animationData = props.animationData,\n      loop = props.loop,\n      autoplay = props.autoplay,\n      initialSegment = props.initialSegment,\n      onComplete = props.onComplete,\n      onLoopComplete = props.onLoopComplete,\n      onEnterFrame = props.onEnterFrame,\n      onSegmentStart = props.onSegmentStart,\n      onConfigReady = props.onConfigReady,\n      onDataReady = props.onDataReady,\n      onDataFailed = props.onDataFailed,\n      onLoadedImages = props.onLoadedImages,\n      onDOMLoaded = props.onDOMLoaded,\n      onDestroy = props.onDestroy;\n    props.lottieRef;\n    props.renderer;\n    props.name;\n    props.assetsPath;\n    props.rendererSettings;\n    var rest = _objectWithoutProperties(props, _excluded$1);\n    var _useState = React.useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      animationLoaded = _useState2[0],\n      setAnimationLoaded = _useState2[1];\n    var animationInstanceRef = React.useRef();\n    var animationContainer = React.useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    var play = function play() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    var stop = function stop() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    var pause = function pause() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    var setSpeed = function setSpeed(speed) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    var goToAndPlay = function goToAndPlay(value, isFrame) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    var goToAndStop = function goToAndStop(value, isFrame) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    var setDirection = function setDirection(direction) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    var playSegments = function playSegments(segments, forceFlag) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    var setSubframe = function setSubframe(useSubFrames) {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    var getDuration = function getDuration(inFrames) {\n      var _a;\n      return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n    var destroy = function destroy() {\n      var _a;\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n      // Removing the reference to the animation so separate cleanups are skipped.\n      // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n      animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    var loadAnimation = function loadAnimation() {\n      var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _a;\n      // Return if the container ref is null\n      if (!animationContainer.current) {\n        return;\n      }\n      // Destroy any previous instance\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n      // Build the animation configuration\n      var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {\n        container: animationContainer.current\n      });\n      // Save the animation instance\n      animationInstanceRef.current = lottie__default[\"default\"].loadAnimation(config);\n      setAnimationLoaded(!!animationInstanceRef.current);\n      // Return a function that will clean up\n      return function () {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        animationInstanceRef.current = undefined;\n      };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n    React.useEffect(function () {\n      var onUnmount = loadAnimation();\n      // Clean up on unmount\n      return function () {\n        return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]);\n    // Update the autoplay state\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n      animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n      // When null should reset to default animation length\n      if (!initialSegment) {\n        animationInstanceRef.current.resetSegments(true);\n        return;\n      }\n      // If it's not a valid segment, do nothing\n      if (!Array.isArray(initialSegment) || !initialSegment.length) {\n        return;\n      }\n      // If the current position it's not in the new segment\n      // set the current position to start\n      if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n        animationInstanceRef.current.currentRawFrame = initialSegment[0];\n      }\n      // Update the segment\n      animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    React.useEffect(function () {\n      var partialListeners = [{\n        name: \"complete\",\n        handler: onComplete\n      }, {\n        name: \"loopComplete\",\n        handler: onLoopComplete\n      }, {\n        name: \"enterFrame\",\n        handler: onEnterFrame\n      }, {\n        name: \"segmentStart\",\n        handler: onSegmentStart\n      }, {\n        name: \"config_ready\",\n        handler: onConfigReady\n      }, {\n        name: \"data_ready\",\n        handler: onDataReady\n      }, {\n        name: \"data_failed\",\n        handler: onDataFailed\n      }, {\n        name: \"loaded_images\",\n        handler: onLoadedImages\n      }, {\n        name: \"DOMLoaded\",\n        handler: onDOMLoaded\n      }, {\n        name: \"destroy\",\n        handler: onDestroy\n      }];\n      var listeners = partialListeners.filter(function (listener) {\n        return listener.handler != null;\n      });\n      if (!listeners.length) {\n        return;\n      }\n      var deregisterList = listeners.map(\n      /**\n       * Handle the process of adding an event listener\n       * @param {Listener} listener\n       * @return {Function} Function that deregister the listener\n       */\n      function (listener) {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n        // Return a function to deregister this listener\n        return function () {\n          var _a;\n          (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n        };\n      });\n      // Deregister listeners on unmount\n      return function () {\n        deregisterList.forEach(function (deregister) {\n          return deregister();\n        });\n      };\n    }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);\n    /**\n     * Build the animation view\n     */\n    var View = /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _objectSpread2({\n      style: style,\n      ref: animationContainer\n    }, rest));\n    return {\n      View: View,\n      play: play,\n      stop: stop,\n      pause: pause,\n      setSpeed: setSpeed,\n      goToAndStop: goToAndStop,\n      goToAndPlay: goToAndPlay,\n      setDirection: setDirection,\n      playSegments: playSegments,\n      setSubframe: setSubframe,\n      getDuration: getDuration,\n      destroy: destroy,\n      animationContainerRef: animationContainer,\n      animationLoaded: animationLoaded,\n      animationItem: animationInstanceRef.current\n    };\n  };\n\n  // helpers\n  function getContainerVisibility(container) {\n    var _container$getBoundin = container.getBoundingClientRect(),\n      top = _container$getBoundin.top,\n      height = _container$getBoundin.height;\n    var current = window.innerHeight - top;\n    var max = window.innerHeight + height;\n    return current / max;\n  }\n  function getContainerCursorPosition(container, cursorX, cursorY) {\n    var _container$getBoundin2 = container.getBoundingClientRect(),\n      top = _container$getBoundin2.top,\n      left = _container$getBoundin2.left,\n      width = _container$getBoundin2.width,\n      height = _container$getBoundin2.height;\n    var x = (cursorX - left) / width;\n    var y = (cursorY - top) / height;\n    return {\n      x: x,\n      y: y\n    };\n  }\n  var useInitInteractivity = function useInitInteractivity(_ref) {\n    var wrapperRef = _ref.wrapperRef,\n      animationItem = _ref.animationItem,\n      mode = _ref.mode,\n      actions = _ref.actions;\n    React.useEffect(function () {\n      var wrapper = wrapperRef.current;\n      if (!wrapper || !animationItem || !actions.length) {\n        return;\n      }\n      animationItem.stop();\n      var scrollModeHandler = function scrollModeHandler() {\n        var assignedSegment = null;\n        var scrollHandler = function scrollHandler() {\n          var currentPercent = getContainerVisibility(wrapper);\n          // Find the first action that satisfies the current position conditions\n          var action = actions.find(function (_ref2) {\n            var visibility = _ref2.visibility;\n            return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];\n          });\n          // Skip if no matching action was found!\n          if (!action) {\n            return;\n          }\n          if (action.type === \"seek\" && action.visibility && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]);\n            //! goToAndStop must be relative to the start of the current segment\n            animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n          }\n          if (action.type === \"loop\") {\n            // Loop: Loop a given frames\n            if (assignedSegment === null) {\n              // if not playing any segments currently. play those segments and save to state\n              animationItem.playSegments(action.frames, true);\n              assignedSegment = action.frames;\n            } else {\n              // if playing any segments currently.\n              //check if segments in state are equal to the frames selected by action\n              if (assignedSegment !== action.frames) {\n                // if they are not equal. new segments are to be loaded\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              } else if (animationItem.isPaused) {\n                // if they are equal the play method must be called only if lottie is paused\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              }\n            }\n          }\n          if (action.type === \"play\" && animationItem.isPaused) {\n            // Play: Reset segments and continue playing full animation from current position\n            animationItem.resetSegments(true);\n            animationItem.play();\n          }\n          if (action.type === \"stop\") {\n            // Stop: Stop playback\n            animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n          }\n        };\n        document.addEventListener(\"scroll\", scrollHandler);\n        return function () {\n          document.removeEventListener(\"scroll\", scrollHandler);\n        };\n      };\n      var cursorModeHandler = function cursorModeHandler() {\n        var handleCursor = function handleCursor(_x, _y) {\n          var x = _x;\n          var y = _y;\n          // Resolve cursor position if cursor is inside container\n          if (x !== -1 && y !== -1) {\n            // Get container cursor position\n            var pos = getContainerCursorPosition(wrapper, x, y);\n            // Use the resolved position\n            x = pos.x;\n            y = pos.y;\n          }\n          // Find the first action that satisfies the current position conditions\n          var action = actions.find(function (_ref3) {\n            var position = _ref3.position;\n            if (position && Array.isArray(position.x) && Array.isArray(position.y)) {\n              return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\n            }\n            if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {\n              return x === position.x && y === position.y;\n            }\n            return false;\n          });\n          // Skip if no matching action was found!\n          if (!action) {\n            return;\n          }\n          // Process action types:\n          if (action.type === \"seek\" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\n            var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\n            animationItem.playSegments(action.frames, true);\n            animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);\n          }\n          if (action.type === \"loop\") {\n            animationItem.playSegments(action.frames, true);\n          }\n          if (action.type === \"play\") {\n            // Play: Reset segments and continue playing full animation from current position\n            if (animationItem.isPaused) {\n              animationItem.resetSegments(false);\n            }\n            animationItem.playSegments(action.frames);\n          }\n          if (action.type === \"stop\") {\n            animationItem.goToAndStop(action.frames[0], true);\n          }\n        };\n        var mouseMoveHandler = function mouseMoveHandler(ev) {\n          handleCursor(ev.clientX, ev.clientY);\n        };\n        var mouseOutHandler = function mouseOutHandler() {\n          handleCursor(-1, -1);\n        };\n        wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n        wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n        return function () {\n          wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n          wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n        };\n      };\n      switch (mode) {\n        case \"scroll\":\n          return scrollModeHandler();\n        case \"cursor\":\n          return cursorModeHandler();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, animationItem]);\n  };\n  var useLottieInteractivity = function useLottieInteractivity(_ref4) {\n    var actions = _ref4.actions,\n      mode = _ref4.mode,\n      lottieObj = _ref4.lottieObj;\n    var animationItem = lottieObj.animationItem,\n      View = lottieObj.View,\n      animationContainerRef = lottieObj.animationContainerRef;\n    useInitInteractivity({\n      actions: actions,\n      animationItem: animationItem,\n      mode: mode,\n      wrapperRef: animationContainerRef\n    });\n    return View;\n  };\n  var _excluded = [\"style\", \"interactivity\"];\n  var Lottie = function Lottie(props) {\n    var _a, _b, _c;\n    var style = props.style,\n      interactivity = props.interactivity,\n      lottieProps = _objectWithoutProperties(props, _excluded);\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    var _useLottie = useLottie(lottieProps, style),\n      View = _useLottie.View,\n      play = _useLottie.play,\n      stop = _useLottie.stop,\n      pause = _useLottie.pause,\n      setSpeed = _useLottie.setSpeed,\n      goToAndStop = _useLottie.goToAndStop,\n      goToAndPlay = _useLottie.goToAndPlay,\n      setDirection = _useLottie.setDirection,\n      playSegments = _useLottie.playSegments,\n      setSubframe = _useLottie.setSubframe,\n      getDuration = _useLottie.getDuration,\n      destroy = _useLottie.destroy,\n      animationContainerRef = _useLottie.animationContainerRef,\n      animationLoaded = _useLottie.animationLoaded,\n      animationItem = _useLottie.animationItem;\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    React.useEffect(function () {\n      if (props.lottieRef) {\n        props.lottieRef.current = {\n          play: play,\n          stop: stop,\n          pause: pause,\n          setSpeed: setSpeed,\n          goToAndPlay: goToAndPlay,\n          goToAndStop: goToAndStop,\n          setDirection: setDirection,\n          playSegments: playSegments,\n          setSubframe: setSubframe,\n          getDuration: getDuration,\n          destroy: destroy,\n          animationContainerRef: animationContainerRef,\n          animationLoaded: animationLoaded,\n          animationItem: animationItem\n        };\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n      lottieObj: {\n        View: View,\n        play: play,\n        stop: stop,\n        pause: pause,\n        setSpeed: setSpeed,\n        goToAndStop: goToAndStop,\n        goToAndPlay: goToAndPlay,\n        setDirection: setDirection,\n        playSegments: playSegments,\n        setSubframe: setSubframe,\n        getDuration: getDuration,\n        destroy: destroy,\n        animationContainerRef: animationContainerRef,\n        animationLoaded: animationLoaded,\n        animationItem: animationItem\n      },\n      actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n      mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\"\n    });\n  };\n  Object.defineProperty(exports, 'LottiePlayer', {\n    enumerable: true,\n    get: function () {\n      return lottie__default[\"default\"];\n    }\n  });\n  exports[\"default\"] = Lottie;\n  exports.useLottie = useLottie;\n  exports.useLottieInteractivity = useLottieInteractivity;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../compiled/hooks/useLottie.js","../compiled/hooks/useLottieInteractivity.js","../compiled/components/Lottie.js"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","animationLoaded","setAnimationLoaded","useState","animationInstanceRef","useRef","animationContainer","play","_a","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","destroy","undefined","loadAnimation","forcedConfigs","config","container","lottie","useEffect","onUnmount","resetSegments","Array","isArray","length","currentRawFrame","setSegment","partialListeners","handler","listeners","filter","listener","deregisterList","map","addEventListener","removeEventListener","forEach","deregister","View","React","createElement","ref","animationContainerRef","animationItem","getContainerVisibility","top","height","getBoundingClientRect","window","innerHeight","max","getContainerCursorPosition","cursorX","cursorY","left","width","x","y","useInitInteractivity","wrapperRef","mode","actions","wrapper","scrollModeHandler","assignedSegment","scrollHandler","currentPercent","action","find","visibility","type","frames","frameToGo","Math","ceil","firstFrame","isPaused","document","cursorModeHandler","handleCursor","_x","_y","pos","position","Number","isNaN","xPercent","yPercent","mouseMoveHandler","ev","clientX","clientY","mouseOutHandler","useLottieInteractivity","lottieObj","Lottie","_b","_c","interactivity","lottieProps"],"mappings":"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","sourcesContent":["import lottie from \"lottie-web\";\nimport React, { useEffect, useRef, useState, } from \"react\";\nconst useLottie = (props, style) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, \n    // Specified here to take them out from the 'rest'\n    lottieRef, renderer, name, assetsPath, rendererSettings, \n    // TODO: find a better way to extract the html props to avoid specifying\n    //  all the props that we want to exclude (as you can see above)\n    ...rest } = props;\n    const [animationLoaded, setAnimationLoaded] = useState(false);\n    const animationInstanceRef = useRef();\n    const animationContainer = useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    const play = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    const stop = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    const pause = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    const playSegments = (segments, forceFlag) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => { var _a; return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames); };\n    /**\n     * Destroy animation\n     */\n    const destroy = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Removing the reference to the animation so separate cleanups are skipped.\n        // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n        animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    const loadAnimation = (forcedConfigs = {}) => {\n        var _a;\n        // Return if the container ref is null\n        if (!animationContainer.current) {\n            return;\n        }\n        // Destroy any previous instance\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Build the animation configuration\n        const config = {\n            ...props,\n            ...forcedConfigs,\n            container: animationContainer.current,\n        };\n        // Save the animation instance\n        animationInstanceRef.current = lottie.loadAnimation(config);\n        setAnimationLoaded(!!animationInstanceRef.current);\n        // Return a function that will clean up\n        return () => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n            animationInstanceRef.current = undefined;\n        };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n    useEffect(() => {\n        const onUnmount = loadAnimation();\n        // Clean up on unmount\n        return () => onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]);\n    // Update the autoplay state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        // When null should reset to default animation length\n        if (!initialSegment) {\n            animationInstanceRef.current.resetSegments(true);\n            return;\n        }\n        // If it's not a valid segment, do nothing\n        if (!Array.isArray(initialSegment) || !initialSegment.length) {\n            return;\n        }\n        // If the current position it's not in the new segment\n        // set the current position to start\n        if (animationInstanceRef.current.currentRawFrame < initialSegment[0] ||\n            animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n            animationInstanceRef.current.currentRawFrame = initialSegment[0];\n        }\n        // Update the segment\n        animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const partialListeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const listeners = partialListeners.filter((listener) => listener.handler != null);\n        if (!listeners.length) {\n            return;\n        }\n        const deregisterList = listeners.map(\n        /**\n         * Handle the process of adding an event listener\n         * @param {Listener} listener\n         * @return {Function} Function that deregister the listener\n         */\n        (listener) => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n            // Return a function to deregister this listener\n            return () => {\n                var _a;\n                (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n            };\n        });\n        // Deregister listeners on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * Build the animation view\n     */\n    const View = React.createElement(\"div\", { style: style, ref: animationContainer, ...rest });\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        getDuration,\n        destroy,\n        animationContainerRef: animationContainer,\n        animationLoaded,\n        animationItem: animationInstanceRef.current,\n    };\n};\nexport default useLottie;\n","import { useEffect } from \"react\";\n// helpers\nexport function getContainerVisibility(container) {\n    const { top, height } = container.getBoundingClientRect();\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n}\nexport function getContainerCursorPosition(container, cursorX, cursorY) {\n    const { top, left, width, height } = container.getBoundingClientRect();\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n    return { x, y };\n}\nexport const useInitInteractivity = ({ wrapperRef, animationItem, mode, actions, }) => {\n    useEffect(() => {\n        const wrapper = wrapperRef.current;\n        if (!wrapper || !animationItem || !actions.length) {\n            return;\n        }\n        animationItem.stop();\n        const scrollModeHandler = () => {\n            let assignedSegment = null;\n            const scrollHandler = () => {\n                const currentPercent = getContainerVisibility(wrapper);\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ visibility }) => visibility &&\n                    currentPercent >= visibility[0] &&\n                    currentPercent <= visibility[1]);\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                if (action.type === \"seek\" &&\n                    action.visibility &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const frameToGo = action.frames[0] +\n                        Math.ceil(((currentPercent - action.visibility[0]) /\n                            (action.visibility[1] - action.visibility[0])) *\n                            action.frames[1]);\n                    //! goToAndStop must be relative to the start of the current segment\n                    animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n                }\n                if (action.type === \"loop\") {\n                    // Loop: Loop a given frames\n                    if (assignedSegment === null) {\n                        // if not playing any segments currently. play those segments and save to state\n                        animationItem.playSegments(action.frames, true);\n                        assignedSegment = action.frames;\n                    }\n                    else {\n                        // if playing any segments currently.\n                        //check if segments in state are equal to the frames selected by action\n                        if (assignedSegment !== action.frames) {\n                            // if they are not equal. new segments are to be loaded\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                        else if (animationItem.isPaused) {\n                            // if they are equal the play method must be called only if lottie is paused\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                    }\n                }\n                if (action.type === \"play\" && animationItem.isPaused) {\n                    // Play: Reset segments and continue playing full animation from current position\n                    animationItem.resetSegments(true);\n                    animationItem.play();\n                }\n                if (action.type === \"stop\") {\n                    // Stop: Stop playback\n                    animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n                }\n            };\n            document.addEventListener(\"scroll\", scrollHandler);\n            return () => {\n                document.removeEventListener(\"scroll\", scrollHandler);\n            };\n        };\n        const cursorModeHandler = () => {\n            const handleCursor = (_x, _y) => {\n                let x = _x;\n                let y = _y;\n                // Resolve cursor position if cursor is inside container\n                if (x !== -1 && y !== -1) {\n                    // Get container cursor position\n                    const pos = getContainerCursorPosition(wrapper, x, y);\n                    // Use the resolved position\n                    x = pos.x;\n                    y = pos.y;\n                }\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ position }) => {\n                    if (position &&\n                        Array.isArray(position.x) &&\n                        Array.isArray(position.y)) {\n                        return (x >= position.x[0] &&\n                            x <= position.x[1] &&\n                            y >= position.y[0] &&\n                            y <= position.y[1]);\n                    }\n                    if (position &&\n                        !Number.isNaN(position.x) &&\n                        !Number.isNaN(position.y)) {\n                        return x === position.x && y === position.y;\n                    }\n                    return false;\n                });\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                // Process action types:\n                if (action.type === \"seek\" &&\n                    action.position &&\n                    Array.isArray(action.position.x) &&\n                    Array.isArray(action.position.y) &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const xPercent = (x - action.position.x[0]) /\n                        (action.position.x[1] - action.position.x[0]);\n                    const yPercent = (y - action.position.y[0]) /\n                        (action.position.y[1] - action.position.y[0]);\n                    animationItem.playSegments(action.frames, true);\n                    animationItem.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) *\n                        (action.frames[1] - action.frames[0])), true);\n                }\n                if (action.type === \"loop\") {\n                    animationItem.playSegments(action.frames, true);\n                }\n                if (action.type === \"play\") {\n                    // Play: Reset segments and continue playing full animation from current position\n                    if (animationItem.isPaused) {\n                        animationItem.resetSegments(false);\n                    }\n                    animationItem.playSegments(action.frames);\n                }\n                if (action.type === \"stop\") {\n                    animationItem.goToAndStop(action.frames[0], true);\n                }\n            };\n            const mouseMoveHandler = (ev) => {\n                handleCursor(ev.clientX, ev.clientY);\n            };\n            const mouseOutHandler = () => {\n                handleCursor(-1, -1);\n            };\n            wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n            wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n            return () => {\n                wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n                wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n            };\n        };\n        switch (mode) {\n            case \"scroll\":\n                return scrollModeHandler();\n            case \"cursor\":\n                return cursorModeHandler();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, animationItem]);\n};\nconst useLottieInteractivity = ({ actions, mode, lottieObj, }) => {\n    const { animationItem, View, animationContainerRef } = lottieObj;\n    useInitInteractivity({\n        actions,\n        animationItem,\n        mode,\n        wrapperRef: animationContainerRef,\n    });\n    return View;\n};\nexport default useLottieInteractivity;\n","import { useEffect } from \"react\";\nimport useLottie from \"../hooks/useLottie\";\nimport useLottieInteractivity from \"../hooks/useLottieInteractivity\";\nconst Lottie = (props) => {\n    var _a, _b, _c;\n    const { style, interactivity, ...lottieProps } = props;\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, getDuration, destroy, animationContainerRef, animationLoaded, animationItem, } = useLottie(lottieProps, style);\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    useEffect(() => {\n        if (props.lottieRef) {\n            props.lottieRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationContainerRef,\n                animationLoaded,\n                animationItem,\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n        lottieObj: {\n            View,\n            play,\n            stop,\n            pause,\n            setSpeed,\n            goToAndStop,\n            goToAndPlay,\n            setDirection,\n            playSegments,\n            setSubframe,\n            getDuration,\n            destroy,\n            animationContainerRef,\n            animationLoaded,\n            animationItem,\n        },\n        actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n        mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\",\n    });\n};\nexport default Lottie;\n"]},"metadata":{},"sourceType":"script"}